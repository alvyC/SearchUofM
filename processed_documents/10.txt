 porter stemming algorithm page completely revised jan earlier edition ‘official’ home page distribution porter stemming algorithm written maintained author martin porter porter stemming algorithm ‘porter stemmer’ process removing commoner morphological inflexional endings words english main part term normalisation process setting information retrieval systems history original stemming algorithm paper written computer laboratory cambridge england part larger ir project appeared chapter final project report cj van rijsbergen se robertson mf porter models probabilistic information retrieval london british library british library research development report van rijsbergen’s encouragement published mf porter algorithm suffix stripping program pp − reprinted karen sparck jones peter willet readings information retrieval san francisco morgan kaufmann isbn original stemmer written bcpl language popular defunct years distributed bcpl form medium punched paper tape versions languages began widely quoted adapted numerous variations functionality versions web page set primarily ‘put record straight’ establish definitive version distribution encodings ansi version heads table equivalent original bcpl version bcpl version differ minor points published algorithm marked downloadable ansi version discussed ansi version regarded definitive acts definition algorithm original published paper years received encoding workers presented reasonable confidence versions correctly encoded language     author     affiliation     received     notes ansi     ansi thread safe     java     perl     perl     daniel van balen         oct     slightly faster python     vivake gupta         jan     csharp     andré hazelwood     official web guide     sep     csharp net compliant     leif azzopardi     univerity paisley scotland     nov     csharp     brad patton         dec     standard code brad common lisp     steven haflich     franz     mar     ruby     ray pereda         jan     github link visual basic vb     navonil mustafee     brunel university     apr     delphi     jo rabin         apr     javascript     ‘andargor’         jul     substantial revisions christopher mckenzie visual basic vb net compliant     christos attikos     university piraeus greece     jan     php     richard heyes         feb     prolog     philip brooks     university georgia     oct     haskell     dmitry antonyuk         nov     tsql     keith lubell             matlab     juan carlos lopez     california pacific medical center research institute     sep     tcl     aris theodorakos     ncsr demokritos     nov         daniel truemper     humboldtuniversitaet zu berlin         erlang erlang     alden dima     national institute standards technology gaithersburg md usa     sep     rebol     dale brearcliffe         apr     scala     ken faulkner             sas     antoine stpierre     business researchers     apr     plugin vim script     mitchell bowden             github link nodejs     jed parsons             github link google     alex gonopolskiy         oct     github link awk     gregory grefenstette         jul     clojure     yushi wang         mar     bitbucket link rust     nhat minh     nanyang technological university     aug     github link vala     serge hulne         sep     mysql     john carty     enlighten jobs     jan     github link julia     matías guzmán naranjo             github link flex     zalán bodó     babesbolyai university     oct     zalan’s notes     mohit makkar     indian institute technology delhi     nov     groovy     dhaval dave         june     github link oorexx     po jonsson         july     sourceforge link encodings algorithm free charge purpose questions algorithms directed authors martin porter author test programs sample vocabulary megabytes output email comments suggestions queries points difference published algorithm extra rule step logi  →  log archaeology equated archaeological step rule abli  →  replaced bli  →  ble possibly equated algorithm leaves strings length case string length unchanged passed algorithm strings length lose final differences present program published algorithm derived great distance original publication difficult emphasised differences small compared variations observed encodings algorithm status porter stemmer regarded ‘frozen’ strictly defined amenable modification stemmer slightly inferior snowball english porter stemmer derives subjected occasional improvements practical work snowball stemmer recommended porter stemmer ir research work involving stemming experiments repeatable common errors historically shortcomings found encodings stemming algorithm algorithm explains set rules type conditions  →  presented rule applied longest matching suffix word true rule succeeds fails replaces rules simply applied turn succeeds list runs leads small errors places step rules mement  →  mment  →  ment  →  remove final ement ment ent properly argument stems argument longest matching suffix ment stem argu measure equal ment removed end step rules applied turn suffix ent stem argum measure equal ent removed delicate rules liable misinterpretation greater care required explaining tion ms tion means taking ion leaves stem measure greater ending means taking sion tion leaves stem measure greater similar confusion arise interpreting rule reduce final double single occasionally cruder errors test consonant vowel set wrong round interesting published paper explains tests strings program switch letter encodings fail technique making slower faqs frequently asked questions licensing arrangement software question popular recently period − clear statment ‘‘all encodings algorithm free charge purpose’’ problem intellectual property major issue formal statement expected restate software completely free purpose notes head program text rare case notes licensing restrictive bsd license case software written martin porter licensing arrangement endorsed contributor unnecessary contributor confirm asked contributors employers proofs distribute software taking software snowball website position similar simpler software issued bsd license contributions written martin porter richard boulton asked authors authors’ employers proofs distribution rights stemmer producing proper words crude error stemming algorithm leave real word removing stem purpose stemming bring variant forms word map word ‘paradigm’ form connected errors question form word stemmed expected stemmed important remember stemming algorithm achieve perfection balance improve ir performance individual cases make errors matter suggesting additional rule included stemmer improve performance